version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
commands:
  prepare-environment:
    description: prepare env
    # parameters:
    #   # Add parameter here   
    steps:
      - run:
          name: Install awscli
          command: |
            # Your code here
            sudo apt install -y tar gzip curl
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -qq awscliv2.zip
            sudo ./aws/install
jobs:
  run-test:
    docker:
      - image: cimg/node:18.18.1
    steps:
      - checkout
      - run:
          name: Run unit test
          command: |
            # Your code here
            cd app
            npm install
            npm run test

  build-docker-image:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - run:
          name: Application build
          command: |
            cd app
            npm install
            cd ..
            docker login -u $DOCKERHUB_LOGIN  -p $DOCKERHUB_PASSWORD
            docker build -t hongduc2994/udacity-capstone:latest .
            docker push hongduc2994/udacity-capstone:latest
  
  create_nodegroup:
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      - prepare-environment
      - run:
          name: Create nodegroup
          command: |
            aws eks update-kubeconfig --name capstone-cluster --region us-east-1
            eksctl create nodegroup --config-file=./kube_config/node_group.yaml

  deploy_application:
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      - prepare-environment
      - run:
          name: Deploy application
          command: |
            docker login -u $DOCKERHUB_LOGIN  -p $DOCKERHUB_PASSWORD
            aws eks update-kubeconfig --name capstone-cluster --region us-east-1
            kubectl apply -f ./kube_config/deployment.yaml
            kubectl apply -f ./kube_config/service.yaml

workflows:
  default:
    jobs:
      - run-test
      - build-docker-image:
          requires: [run-test]
      - create_nodegroup:
          requires: [build-docker-image]