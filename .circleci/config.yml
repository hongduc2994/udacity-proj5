version: 2.1

commands:
  prepare-environment:
    description: prepare env
    # parameters:
    #   # Add parameter here   
    steps:
      - run:
          name: Install awscli
          command: |
            # Your code here
            sudo apt install -y tar gzip curl
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -qq awscliv2.zip
            sudo ./aws/install
      - run:
          name: Install eksctl
          command: curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin
jobs:
  run_docker_lint:
    docker:
      - image: cimg/python:3.11.6
    steps:
        - run:
            wget -O ./hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
            hadolint Dockerfile
  run-test:
    docker:
      - image: cimg/node:18.18.1
    steps:
      - checkout
      - run:
          name: Run unit test
          command: |
            # Your code here
            cd app
            npm install
            npm run lint
            npm run test

  build-docker-image:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - run:
          name: Application build
          command: |
            cd app
            npm install
            cd ..
            docker login -u $DOCKERHUB_LOGIN  -p $DOCKERHUB_PASSWORD
            docker build -t hongduc2994/udacity-capstone:latest .
            docker push hongduc2994/udacity-capstone:latest
  
  create_nodegroup:
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      - prepare-environment
      - run:
          name: Create nodegroup
          command: |
            aws eks update-kubeconfig --name capstone --region us-east-1
            cd kube_config
            sed -i "s/BUILDID/${CIRCLE_WORKFLOW_ID:0:7}/g" node_group.yml
            eksctl create nodegroup -f node_group.yml

  deploy_application:
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      - prepare-environment
      - run:
          name: Install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && kubectl version --client
      - run:
          name: Deploy application
          command: |
            docker login -u $DOCKERHUB_LOGIN  -p $DOCKERHUB_PASSWORD
            aws eks update-kubeconfig --name capstone --region us-east-1
            cd kube_config
            sed -i "s/BUILDID/${CIRCLE_WORKFLOW_ID:0:7}/g" namespace.yml
            sed -i "s/BUILDID/${CIRCLE_WORKFLOW_ID:0:7}/g" deployment.yml
            kubectl apply -f namespace.yml
            kubectl apply -f deployment.yml
            kubectl expose -f deployment.yml --namespace=capstone-${CIRCLE_WORKFLOW_ID:0:7}-ns --type=LoadBalancer --name=react-app-public --port=9000
            kubectl get deploy,rs,svc,pods --namespace=capstone-${CIRCLE_WORKFLOW_ID:0:7}-ns

workflows:
  default:
    jobs:
      - run_docker_lint
      - run-test
      - build-docker-image:
          requires: [run-test]
      - create_nodegroup:
          requires: [build-docker-image, run_docker_lint]
      - deploy_application:
          requires: [create_nodegroup]